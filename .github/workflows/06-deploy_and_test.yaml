name: deployment-pipeline
    
on:
  workflow_dispatch:

jobs:
  experiment:
    name: experiment
    runs-on: ubuntu-latest
    environment:
        name: dev
    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: install az ml extension
      run: az extension add -n ml -y
    - name: azure login
      uses: azure/actions/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: set current directory
      run: cd src
    - name: run pipeline
      run: az ml job create --file src/experiment_job.yml --resource-group Learn_MLOps --workspace-name MLOps_WS

  production:
    needs: experiment
    name: production
    runs-on: ubuntu-latest
    environment:
        name: prod
    outputs:
      run_id: ${{steps.run_pipeline.outputs.run_id}}
    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: install az ml extension
      run: az extension add -n ml -y
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: set current directory
      run: cd src
    - name: run pipeline
      id: run_pipeline
      run: bash src/job_script.sh
    - name: create-endpoint
      run: az ml online-endpoint create --name pipeline-endpoint-2  --resource-group Learn_MLOps --workspace-name mlops_ws_prod
    - name: register-model
      run: |
              az ml model create --name production-model --type mlflow_model --version 1 --path azureml://jobs/${RUN_ID}/outputs/artifacts/paths/model/ -w mlops_ws_prod
      env:
        JOB_ID: ${{ steps.run_pipeline.outputs.run_id }}
    - name: create-online-deployment
      run: |
           az ml online-deployment create --name production-deployment --endpoint pipeline-endpoint-2 -f src/production-deployment.yaml --all-traffic --resource-group Learn_MLOps --workspace-name mlops_ws_prod


