name: deployment-pipeline
    
on:
  workflow_dispatch:

jobs:
  experiment:
    name: experiment
    runs-on: ubuntu-latest
    environment:
        name: dev
    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: install az ml extension
      run: az extension add -n ml -y
    - name: azure login
      uses: azure/actions/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: set current directory
      run: cd src
    - name: run pipeline
      run: az ml job create --file src/experiment_job.yml --resource-group Learn_MLOps --workspace-name MLOps_WS

  production:
    needs: experiment
    name: production
    runs-on: ubuntu-latest
    environment:
        name: prod
    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: install az ml extension
      run: az extension add -n ml -y
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: set current directory
      run: cd src
    - name: run pipeline
      run: |
          run_id=$(az ml job create --file src/production_job.yml --resource-group Learn_MLOps --workspace-name mlops_ws_prod --query name -o tsv)
          if [[ -z "$run_id" ]]
          then
            echo "Job creation failed"
            exit 3
          fi
          az ml job show -n $run_id --web
          status=$(az ml job show -n $run_id   --query status -o tsv --resource-group Learn_MLOps --workspace-name mlops_ws_prod)
          if [[ -z "$status" ]]
          then
            echo "Status query failed"
            exit 4
          fi
          running=("NotStarted" "Queued" "Starting" "Preparing" "Running" "Finalizing" "CancelRequested")
          while [[ ${running[*]} =~ $status ]]
          do
            sleep 15 
            status=$(az ml job show -n $run_id  --query status -o tsv --resource-group Learn_MLOps --workspace-name mlops_ws_prod)
            echo $status
          done
          if [[ "$status" != "Completed" ]]  
          then
            echo "Training Job failed or canceled"
            exit 3
          fi

  create-endpoint:
    needs: production
    name: create-endpoint
    runs-on: ubuntu-latest
    environment:
        name: prod
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: "Az CLI login"
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: install-extension
      run: az extension add -n ml -y
    - name: update-extension
      run: az extension update -n ml
    - name: set current directory
      run: cd src
    - name: create-environment-from-file
      run: |
        #      az ml ${{ inputs.endpoint_type }}-endpoint create --name ${{ inputs.endpoint_name }} \
        #      -f ${{ github.workspace }}/${{ inputs.endpoint_file }} --resource-group ${{ inputs.resource_group }} \
        #      --workspace-name ${{ inputs.workspace_name }}
              az ml online-endpoint create --name pipeline-endpoint-2  --resource-group Learn_MLOps --workspace-name mlops_ws_prod

  register-model:
    needs: create-endpoint
    name: register-model
    runs-on: ubuntu-latest
    environment:
        name: prod
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: "Az CLI login"
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: install-extension
      run: az extension add -n ml -y
    - name: update-extension
      run: az extension update -n ml
    - name: set current directory
      run: cd src
    - name: create-environment-from-file
      run: |
              az ml model create --name production-model --type mlflow_model --version 1 --path azureml://jobs/$run_id/outputs/artifacts/paths/model/ -w mlops_ws_prod
              

  create-deployment:
    needs: register-model
    name: create-deployment
    runs-on: ubuntu-latest
    environment:
        name: prod
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: "Az CLI login"
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: install-extension
      run: az extension add -n ml -y
    - name: update-extension
      run: az extension update -n ml
    - name: set current directory
      run: cd src
    - name: create-online-deployment
      run: |
           az ml online-deployment create --name production-deployment --endpoint pipeline-endpoint-2 -f src/production-deployment.yaml --all-traffic --resource-group Learn_MLOps --workspace-name mlops_ws_prod


